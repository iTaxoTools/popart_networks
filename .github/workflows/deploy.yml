name: Deploy

on:
  push:
    tags:
      - 'v*'

jobs:

  build-wheels:
    name: Build wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]

    env:
      CIBW_SKIP: "*-win32"
      CIBW_ARCHS_MACOS: x86_64 arm64 universal2

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: ./wheelhouse/*.whl


  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Build sdist
        run: |
          pipx run build --sdist
          python -m twine check dist/*

      - uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/*.tar.gz


  publish-to-testpypi:
    name: Publish to TestPyPI
    runs-on: ubuntu-latest
    needs:
      - build-wheels
      - build-sdist

    environment:
        name: testpypi
        url: https://test.pypi.org/p/itaxotools-popart-networks/

    permissions:
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist

      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true


  draft-github-release:
    name: Draft a GitHub Release
    runs-on: ubuntu-latest
    needs:
      - publish-to-testpypi

    environment:
      name: github
      url: ${{ github.server_url }}/${{ github.repository }}/releases

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --generate-notes
          --draft

      - name: Upload artifacts to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
